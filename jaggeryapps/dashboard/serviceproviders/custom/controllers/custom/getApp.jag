<%
var log = new Log();
var cookie = request.getParameter("cookie");
var user = request.getParameter("user");
var applicationName = request.getParameter("spName");
var spClient = require('../custom/spAdminClient.jag');
var appManagementClient = require('/modules/appManagementClient.js').appManagementClient();
var appManagementIntegrationConfig = require('/conf/app_management_integration.json');
var appVersion= "1.0";

getAppDetails();

function getAppDetails() {

    session.put('auth-cookie', cookie);
    session.put('user', user);


    try {
        var publisher = new appManagementClient.Publisher(appManagementIntegrationConfig.restAPI);

        // Check whether there is an OAuth app registered for ReST API calls.
        // If not the publisher module will create one.
        var oauthApp = getOAuthAppForRestAPI();

        publisher.init(oauthApp);

        var fieldValues = publisher.getApp(applicationName, appVersion);
        print(fieldValues);
    } catch (e) {
        print(e);
        log.error(e);
    }
}

function getOAuthAppForRestAPI() {

    var createdServiceProviders = spClient.getAllCustomSPs().return;

    var oauthAppName = appManagementIntegrationConfig.restAPI.clientRegistration.clientName;
    var oauthAppExists = false;

    for (var i = 0; i < createdServiceProviders.length; i++) {
        if (createdServiceProviders[i].applicationName === oauthAppName) {
            oauthAppExists = true;
            break;
        }
    }

    var oauthApp;
    if (oauthAppExists) {
        oauthApp = spClient.getApplication(oauthAppName).return;
    }

    return oauthApp;
}

%>
