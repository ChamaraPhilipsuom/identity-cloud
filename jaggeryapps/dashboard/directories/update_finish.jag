<%

var log = new Log();
include("../controllers/wsUtil.jag");
var util = require("../util/utility.jag");

var serverUrl = util.getServerUrl();
serverUrl = serverUrl + "/UserStoreConfigAdminService";
var ws = require('ws');
var webService = new ws.WSRequest();
var i18n = session.get("i18n");

updateUserStore();
function updateUserStore(){

    try{
        var name = request.getParameter('name');
        var url = request.getParameter('url');
        var uniqueId = request.getParameter('uniqueid');
        var disabled = request.getParameter('disabled');

        var domain="is-wso2.com"; //TODO remove magic words
        var updateUserStore = '<xsd:editUserStore xmlns:xsd ="http://org.apache.axis2/xsd" xmlns:xsd1="http://dto.configuration.store.user.identity.carbon.wso2.org/xsd">' +
                '<xsd:userStoreDTO>' +
                '<xsd1:className>org.wso2.carbon.identity.user.store.ws.WSUserStoreManager</xsd1:className>' +
                '<xsd1:description>' + name + '</xsd1:description>' +
                '<xsd1:disabled>false</xsd1:disabled>' +
                '<xsd1:domainId>' + domain + '</xsd1:domainId>' +
                '<xsd1:properties>' +
                '<xsd1:name>EndPointURL</xsd1:name>' +
                '<xsd1:value>' + url + '</xsd1:value>' +
                '</xsd1:properties>' +

                '<xsd1:properties>' +
                '<xsd1:name>UniqueID</xsd1:name>' +
                '<xsd1:value>' + uniqueId + '</xsd1:value>' +
                '</xsd1:properties>' +

                '<xsd1:properties>' +
                '<xsd1:name>Disabled</xsd1:name>' +
                '<xsd1:value>' + disabled + '</xsd1:value>' +
                '</xsd1:properties>' +

                '</xsd:userStoreDTO>' +
                '</xsd:editUserStore>';

        webService = new ws.WSRequest();
        callWSInOnly(webService, serverUrl, "urn:editUserStore", updateUserStore);
        print("Success");

    }catch(e){
        log.error(e);
        print("Error occurred while deleting User Store" + getErrorMessage(e.message));

    }

}

function getErrorMessage(message) {
    if (message != null && message.length > 0) {
        if (message.indexOf('401 Error: Unauthorized') > -1) {
            return '{"success":false, "reLogin":true}';
        } else {
            var msg = message.split(':');
            if (msg.length > 0) {
                return '{"success":false, "message":"' + msg[1] + '"}';
            }
        }
    }
    return '{"success":false, "message":null}';
}

%>